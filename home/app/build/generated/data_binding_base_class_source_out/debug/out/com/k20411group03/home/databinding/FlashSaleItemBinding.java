// Generated by view binder compiler. Do not edit!
package com.k20411group03.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k20411group03.home.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FlashSaleItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imvProductImage;

  @NonNull
  public final TextView txtFlashsalePercent;

  @NonNull
  public final TextView txtFlashsaleQuantity;

  @NonNull
  public final TextView txtProductName;

  @NonNull
  public final TextView txtProductPrice;

  @NonNull
  public final TextView txtProductPriceSale;

  private FlashSaleItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView imvProductImage,
      @NonNull TextView txtFlashsalePercent, @NonNull TextView txtFlashsaleQuantity,
      @NonNull TextView txtProductName, @NonNull TextView txtProductPrice,
      @NonNull TextView txtProductPriceSale) {
    this.rootView = rootView;
    this.imvProductImage = imvProductImage;
    this.txtFlashsalePercent = txtFlashsalePercent;
    this.txtFlashsaleQuantity = txtFlashsaleQuantity;
    this.txtProductName = txtProductName;
    this.txtProductPrice = txtProductPrice;
    this.txtProductPriceSale = txtProductPriceSale;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FlashSaleItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FlashSaleItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.flash_sale_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FlashSaleItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imv_ProductImage;
      ImageView imvProductImage = ViewBindings.findChildViewById(rootView, id);
      if (imvProductImage == null) {
        break missingId;
      }

      id = R.id.txt_FlashsalePercent;
      TextView txtFlashsalePercent = ViewBindings.findChildViewById(rootView, id);
      if (txtFlashsalePercent == null) {
        break missingId;
      }

      id = R.id.txt_FlashsaleQuantity;
      TextView txtFlashsaleQuantity = ViewBindings.findChildViewById(rootView, id);
      if (txtFlashsaleQuantity == null) {
        break missingId;
      }

      id = R.id.txt_ProductName;
      TextView txtProductName = ViewBindings.findChildViewById(rootView, id);
      if (txtProductName == null) {
        break missingId;
      }

      id = R.id.txt_ProductPrice;
      TextView txtProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtProductPrice == null) {
        break missingId;
      }

      id = R.id.txt_ProductPriceSale;
      TextView txtProductPriceSale = ViewBindings.findChildViewById(rootView, id);
      if (txtProductPriceSale == null) {
        break missingId;
      }

      return new FlashSaleItemBinding((LinearLayout) rootView, imvProductImage, txtFlashsalePercent,
          txtFlashsaleQuantity, txtProductName, txtProductPrice, txtProductPriceSale);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
